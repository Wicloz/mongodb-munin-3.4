#!/usr/bin/python

"""
Magic markers
#%# family=contrib
#%# capabilities=autoconf
"""

import sys
sys.path.insert(0, '/usr/lib/mongopython')
import mongodb_commands as mongodb
import re
try:
    import json
except ImportError:
    import simplejson as json

def safe_name(unsafe_name):
    return re.sub(r"[^A-Za-z0-9_]+", "_", unsafe_name)

"""
Begin unique section.
"""

def get_server_data():
    return mongodb.getListDatabases()["databases"]

def print_values():
    for v in get_server_data():
        print("%s.value %d" % (safe_name(v["name"]), v["sizeOnDisk"]))

def print_config_b():
    print("graph_title MongoDB database size")
    print("graph_args --base 1024")
    print("graph_vlabel size on disk (bytes)")
    print("graph_total total size")

    for v in get_server_data():
        print("%s.label %s" % (safe_name(v["name"]), v["name"]))
        print("%s.draw AREASTACK" % (safe_name(v["name"])))

"""
End unique section.
"""

def print_config_a():
    print("graph_category mongodb")

def print_autoconf():
    from os import environ
    timeout = 3
    if 'autoconftimeout' in environ:
        timeout = environ['autoconftimeout']
    try:
        mongodb.getListDatabases(timeout)
        print("yes")
    except:
        print("no (can't get mongodb database list)")

if __name__ == '__main__':
    if len(sys.argv) > 1:
        if sys.argv[1] == "config":
            print_config_a()
            print_config_b()
        elif sys.argv[1] == "autoconf":
            print_autoconf()
    else:
        print_values()
